set langmenu=none
" iMproved, required
set nocompatible

" Desc: tab
set smarttab
" TAB 切换为空格
set expandtab
" tab=4 个空格
set tabstop=4
" 根据前方代码判断缩进
set cindent shiftwidth=4 " set cindent on to autoinent when editing c/c++ file, with 4 shift width
" 特定参数改变缩进行为, see help cinoptions-values for more details
set cinoptions=>s,e0,n0,f0,{0,}0,^0,:0,=s,l0,b0,g0,hs,ps,ts,is,+s,c3,C0,0,(0,us,U0,w0,W0,m0,j0,)20,*30

" Desc: 缩进
" shift 四舍五入到tab 的倍数
set shiftround
" 下一行复制上一行缩进
set autoindent
" {} 开始时添加缩进
set smartindent

"
" 相对行号
set relativenumber
" 显式当前行号
set nu
" 自动换行
set wrap

" 搜索
set showmatch " show matching paren
set incsearch " do incremental searching
set hlsearch " highlight search terms
set ignorecase " set search/replace pattern to ignore case
set smartcase " set smartcase mode on, If there is upper case character in the search patern, the 'ignorecase' option will be override.

" 剪切板
set clipboard+=unnamed,unnamedplus
" allow backspacing over everything in insert mode
set backspace=indent,eol,start
" 指定按一次backspace就删除shiftwidth宽度
set smarttab

" 补全时即使有一个写显式菜单，不自动选第一个
set completeopt=menuone,noselect

" 保留5行
set scrolloff=10

" 关闭系统警告声
set noeb
" 通过闪烁代替警告
set vb

" 任意时刻使用鼠标
set mouse=a

" in visual block mode, cursor can be positioned where there is no actual character
set ve=block

" 解释所有数字为十进制
set nf=

" enable complete in command mode
set wildmenu
set showcmd
set cmdheight=1

" show the cursor position all the time
set ruler

" shortens messages to avoid 'press a key' prompt
set shortmess=aoOtTI

" do not redraw while executing macros (much faster)
set lazyredraw

" for easy browse last line with wrap text
set display+=lastline

" always have status-line
set laststatus=2

" allow to change buffer without saving
set hidden

" 当文件在外部被修改，自动更新该文件
set autoread

" make sure our terminal use 256 color
set termguicolors
set t_Co=256

" File encoding
set encoding=utf-8                                    " 设置gvim内部编码，默认不更改
set fileencodings=utf-8,ucs-bom,gbk,cp936,latin-1     "设置支持打开的文件的编码

" 默认在右边/下边打开新窗口
set splitright
set splitbelow

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

" 0 second to show the matching parent ( much faster )
set matchtime=0

" no autochchdir
set noacd

" 当前行高亮
set cursorline

" mapper
let mapleader ="\\"

" 增强剪切板
map <leader>y "*y
vmap <leader>y "*y
map <leader>p "*p

" w为选择到这个单词结尾
nmap w e

" 缩进后保持v mode
vmap < <gv
vmap > >gv

" 全选
nmap <C-a> ggVG
nmap <D-a> ggVG<CR>

" 保存
cmap W w
cmap ww w !sudo tee %

" paste 后不替换
nnoremap <leader>d "_d
function! Paste()
    " " 保存原始光标位置
    " let save_cursor = getpos(".")

    " 获取剪贴板内容
    let clipboard_content = getreg('"')

    " 检查内容是否以换行符结束
    if clipboard_content[-1] == "\n"
        " 如果是，执行 "_dp
        execute 'normal! gv"_d'
        execute 'normal! P'
    else
        " 如果不是，执行 "_dP
        execute 'normal! gv"_d'
        execute 'normal! P'
    endif
    "
    " " 恢复原始光标位置
    " call setpos('.', save_cursor)
endfunction

" 将 p 键映射到这个函数
vnoremap p :call Paste()<CR>

nmap gp '.

nmap <c-k> <c-w>k
nmap <c-j> <c-w>j
nmap <c-h> <c-w>h
nmap <c-l> <c-w>l

noremap <Up> <c-w>k
noremap <Down> <c-w>j
noremap <Left> <c-w>h
noremap <Right> <c-w>l

if has('multi_byte_ime')
    hi Cursor guifg=bg guibg=White gui=NONE
    hi CursorIM guifg=NONE guibg=Skyblue gui=NONE
    set iminsert=0 imsearch=0
endif
